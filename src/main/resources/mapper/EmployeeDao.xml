<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dms.dao.EmployeeDao">

    <resultMap id="EmployeeMap" type="EmployeeDto">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="position" column="position"/>
        <result property="hiredate" column="hiredate" typeHandler="com.dms.handler.LocalDateTimeHandler"/>
        <result property="baseWage" column="base_wage" typeHandler="com.dms.handler.BigDecimalHandler"/>
        <result property="bankCardNumber" column="bank_card_number"/>
        <result property="workingAgeSubsidy" column="working_age_subsidy"/>
        <result property="overtime" column="overtime"/>
        <result property="mealsSubsidy" column="meals_subsidy"/>
        <result property="secrecySubsidy" column="secrecy_subsidy"/>
        <result property="communicationFee" column="communication_fee"/>
        <result property="jywCommissionRatio" column="jyw_commission_ratio"/>
        <result property="commencementRatio" column="commencement_ratio"/>
        <result property="completionRatio" column="completion_ratio"/>
        <result property="renovateCommissionRatio" column="renovate_commission_ratio"/>
        <result property="identityCardNumber" column="identity_card_number"/>
        <result property="transportationAllowance" column="transportation_allowance"/>
        <result property="postAllowance" column="post_allowance"/>
        <result property="leaveDate" column="leave_date" typeHandler="com.dms.handler.LocalDateTimeHandler"/>
        <result property="storageCharge" column="storage_charge"/>
        <result property="totalCharge" column="total_charge"/>
        <result property="chargePerMonth" column="charge_per_month"/>
        <result property="charge" column="charge"/>
        <result property="companyId" column="company_id"/>
    </resultMap>

    <select id="getAttendance" resultType="Attendance">
        select * from attendance order by "value"
    </select>

    <select id="getMonths" resultType="Month">
        select * from "month" order by text desc
    </select>

    <select id="getPositions" resultType="Position">
        select * from "position" order by "value"
    </select>

    <select id="getEmployeeCount" parameterType="DataGridRequest" resultType="int">
        select count(id) from "employee"
        <where>
            <if test="key != null and key != ''">
                <bind name="pattern" value="'%' + key + '%'"/>
                name like #{pattern}
            </if>
        </where>
    </select>

    <select id="getEmployees" parameterType="DataGridRequest" resultMap="EmployeeMap">
        select * from
        (
        select *, row_number() over (order by id) rn from "employee"
        <where>
            <if test="key != null and key != ''">
                <bind name="pattern" value="'%' + key + '%'"/>
                name like #{pattern}
            </if>
        </where>
        ) t
        <where>
            t.rn BETWEEN #{start} and #{end}
            <choose>
                <when test="sortField == 'name'">
                    order by name
                </when>
                <when test="sortField == 'hiredate'">
                    order by hiredate
                </when>
                <when test="sortField == 'baseWage'">
                    order by base_wage
                </when>
                <otherwise>
                    order by id
                </otherwise>
            </choose>
            <choose>
                <when test="sortOrder == 'desc'">
                    desc
                </when>
                <otherwise>
                    asc
                </otherwise>
            </choose>
        </where>
    </select>

    <insert id="saveEmployees" parameterType="list">
        insert into "employee" (name, "position", hiredate, base_wage, bank_card_number,
        working_age_subsidy, overtime,
        meals_subsidy, secrecy_subsidy, communication_fee,
        jyw_commission_ratio, commencement_ratio, completion_ratio,
        renovate_commission_ratio, identity_card_number, transportation_allowance, post_allowance, leave_date,
        storage_charge, total_charge, charge_per_month, charge, company_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name}, #{item.position}, #{item.hiredate}, #{item.baseWage}, #{item.bankCardNumber},
            #{item.workingAgeSubsidy}, #{item.overtime},
            #{item.mealsSubsidy}, #{item.secrecySubsidy}, #{item.communicationFee},
            ${item.jywCommissionRatio}, #{item.commencementRatio}, #{item.completionRatio},
            #{item.renovateCommissionRatio},
            #{item.identityCardNumber},
            #{item.transportationAllowance},
            #{item.postAllowance},
            #{item.leaveDate},
            #{item.storageCharge},
            #{item.totalCharge},
            #{item.chargePerMonth},
            #{item.charge},
            #{item.companyId}
            )
        </foreach>
    </insert>

    <update id="updateEmployees" parameterType="list">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update "employee"
            set name = #{item.name},
            position = #{item.position},
            hiredate = #{item.hiredate},
            base_wage = #{item.baseWage},
            bank_card_number = #{item.bankCardNumber},
            working_age_subsidy = #{item.workingAgeSubsidy},
            overtime = #{item.overtime},
            meals_subsidy = #{item.mealsSubsidy},
            secrecy_subsidy = #{item.secrecySubsidy},
            communication_fee = #{item.communicationFee},
            jyw_commission_ratio = ${item.jywCommissionRatio},
            commencement_ratio = #{item.commencementRatio},
            completion_ratio = #{item.completionRatio},
            renovate_commission_ratio = #{item.renovateCommissionRatio},
            identity_card_number = #{item.identityCardNumber},
            transportation_allowance = #{item.transportationAllowance},
            post_allowance = #{item.postAllowance},
            leave_date = #{item.leaveDate},
            storage_charge = #{item.storageCharge},
            total_charge = #{item.totalCharge},
            charge_per_month = #{item.chargePerMonth},
            charge = #{item.charge},
            company_id = #{item.companyId}
            where id = #{item.id}
        </foreach>
    </update>


    <select id="getEmployee" parameterType="long" resultMap="EmployeeMap">
        select * from employee where id = #{employeeId}
    </select>

    <update id="updateCharge">
        update employee set charge = #{charge} where id = #{id}
    </update>

</mapper>