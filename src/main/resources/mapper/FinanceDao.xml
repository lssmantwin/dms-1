<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dms.dao.FinanceDao">

    <resultMap id="FinanceMap" type="FinanceDto">
        <id property="id" column="finance_id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="employeeName" column="employee_name"/>
        <result property="baseWage" column="base_wage"/>
        <result property="overtime" column="overtime"/>
        <result property="mealsSubsidy" column="meals_subsidy"/>
        <result property="secrecySubsidy" column="secrecy_subsidy"/>
        <result property="communicationFee" column="communication_fee"/>
        <result property="attendance" column="attendance"/>
        <result property="bonusCard" column="bonus_card"/>
        <result property="bonusCash" column="bonus_cash"/>
        <result property="workingAgeSubsidy" column="working_age_subsidy"/>
        <result property="performanceAppraisalCard" column="performance_appraisal_card"/>
        <result property="performanceAppraisalCash" column="performance_appraisal_cash"/>
        <result property="otherSubsidyCard" column="other_subsidy_card"/>
        <result property="otherSubsidyCash" column="other_subsidy_cash"/>
        <result property="exhibitionCharge" column="exhibition_charge"/>
        <result property="charge" column="charge"/>
        <result property="chargeComments" column="charge_comments"/>
        <result property="otherCharge" column="other_charge"/>
        <result property="casualLeave" column="casual_leave"/>
        <result property="sickLeave" column="sick_leave"/>
        <result property="storageCharge" column="storage_charge"/>
        <result property="chargePerMonth" column="charge_per_month"/>
        <result property="totalCharge" column="total_charge"/>
        <result property="storage" column="storage"/>
        <result property="grossPay" column="gross_pay"/>
        <result property="medicalInsurance" column="medical_insurance"/>
        <result property="housingFund" column="housing_fund"/>
        <result property="beforeTaxSalary" column="before_tax_salary"/>
        <result property="personalIncomeTax" column="personal_income_tax"/>
        <result property="afterTaxSalary" column="after_tax_salary"/>
        <result property="alreadyCharge" column="already_charge" typeHandler="com.dms.handler.BooleanHandler"/>
        <result property="identityCardNumber" column="identity_card_number"/>
        <result property="bankCardNumber" column="bank_card_number"/>
        <result property="postAllowance" column="post_allowance"/>
        <result property="salaryCash" column="salary_cash"/>
        <result property="contractWages" column="contract_wages"/>
        <result property="commission" column="commission"/>

    </resultMap>

    <resultMap id="SalaryBillMap" type="SalaryBill">
        <result property="month" column="month"/>
        <result property="companyId" column="company_id"/>
        <result property="department" column="department"/>
        <result property="employeeName" column="employee_name"/>
        <result property="position" column="position"/>
        <result property="hiredate" column="hiredate" typeHandler="com.dms.handler.LocalDateTimeHandler"/>
        <result property="baseWage" column="base_wage"/>
        <result property="otherSubsidyCard" column="other_subsidy_card"/>
        <result property="mealsSubsidy" column="meals_subsidy"/>
        <result property="secrecySubsidy" column="secrecy_subsidy"/>
        <result property="workingAgeSubsidy" column="working_age_subsidy"/>
        <result property="communicationFee" column="communication_fee"/>
        <result property="charge" column="charge"/>
        <result property="exhibitionCharge" column="exhibition_charge"/>
        <result property="casualLeave" column="casual_leave"/>
        <result property="sickLeave" column="sick_leave"/>
        <result property="storage" column="storage"/>
        <result property="grossPay" column="gross_pay"/>
        <result property="medicalInsurance" column="medical_insurance"/>
        <result property="housingFund" column="housing_fund"/>
        <result property="beforeTaxSalary" column="before_tax_salary"/>
        <result property="personalIncomeTax" column="personal_income_tax"/>
        <result property="afterTaxSalary" column="after_tax_salary"/>
        <result property="bankCardNumber" column="bank_card_number"/>
        <result property="identityCardNumber" column="identity_card_number"/>
        <result property="performanceAppraisalCard" column="performance_appraisal_card"/>
        <result property="bonusCard" column="bonus_card"/>

        <result property="postAllowance" column="post_allowance"/>
        <result property="performanceAppraisalCash" column="performance_appraisal_cash"/>
        <result property="otherSubsidyCash" column="other_subsidy_cash"/>
        <result property="bonusCash" column="bonus_cash"/>
        <result property="otherCharge" column="other_charge"/>
        <result property="salaryCash" column="salary_cash"/>
        <result property="isChanged" column="is_changed"/>

    </resultMap>

    <select id="getFinances" parameterType="FinanceFilterRequest" resultMap="FinanceMap">
        select t.eid as employee_id, t.name as employee_name, t.base_wage, t.overtime, t.meals_subsidy,
        t.secrecy_subsidy, t.communication_fee, t.fid as finance_id, t.month,
        t.attendance, t.bonus_card, t.bonus_cash, t.working_age_subsidy, t.performance_appraisal_card,
        t.performance_appraisal_cash, t.other_subsidy_card, t.other_subsidy_cash, t.exhibition_charge, t.charge,
        t.charge_comments,t.other_charge, t.casual_leave, t.sick_leave, t.gross_pay, t.medical_insurance,
        t.housing_fund, t.before_tax_salary, t.personal_income_tax, t.after_tax_salary, t.already_charge,
        t.identity_card_number, t.bank_card_number, t.storage_charge, t.charge_per_month, t.total_charge, t.storage,
        t.post_allowance, t.salary_cash, t.contract_wages, t.commission
        from (
        select e.id as eid, e.name, e.base_wage, e.overtime, e.meals_subsidy, e.secrecy_subsidy,
        e.communication_fee, e.working_age_subsidy, e.identity_card_number, e.bank_card_number,
        e.storage_charge, e.charge_per_month, e.charge as total_charge,
        f.id as fid, f.month, f.attendance,
        f.bonus_card, f.bonus_cash, f.performance_appraisal_card, f.performance_appraisal_cash,
        f.other_subsidy_card, f.other_subsidy_cash, f.exhibition_charge, f.charge,
        f.charge_comments,f.other_charge, f.casual_leave, f.sick_leave,
        f.storage, f.gross_pay, e.medical_insurance,
        e.housing_fund, f.before_tax_salary, f.personal_income_tax, f.after_tax_salary, f.already_charge,
        f.salary_cash,f.contract_wages, f.post_allowance, f.commission,
        row_number() over (order by e.id) as rn from salary_employee e left join salary_finance f on e.id =
        f.employee_id and
        f."month" = #{month}
        <where>
            <if test="employeeName != null and employeeName != ''">
                <bind name="pattern" value="'%' + employeeName + '%'"/>
                e.name like #{pattern}
            </if>
        </where>
        ) t
        <where>
            <if test="end > 0">
                t.rn BETWEEN #{start} and #{end}
            </if>
        </where>
    </select>

    <select id="getSalaryBills" parameterType="FinanceFilterRequest" resultMap="SalaryBillMap">
        select
        t.company_id, t.name as employee_name, t."position", t.hiredate, t.base_wage, t.other_subsidy_card,
        t.other_subsidy_cash, t.meals_subsidy, t.department,
        t.secrecy_subsidy, t.working_age_subsidy, t.communication_fee, t.charge, t.exhibition_charge,
        t.casual_leave, t.sick_leave, t.storage, t.gross_pay, t.medical_insurance, t.housing_fund,
        t.before_tax_salary, t.personal_income_tax, t.after_tax_salary, t.bank_card_number, t.identity_card_number,
        t.post_allowance, t.performance_appraisal_cash, t.bonus_cash, t.salary_cash, t."month",
        t.performance_appraisal_card, t.bonus_card, t.other_charge
        from (
        select e.company_id, e.name, e."position", e.hiredate, e.base_wage, f.other_subsidy_card, f.other_subsidy_cash,
        e.meals_subsidy, e.department,
        e.secrecy_subsidy, e.working_age_subsidy, e.communication_fee, f.charge, f.exhibition_charge,
        f.casual_leave, f.sick_leave, f.storage, f.gross_pay, e.medical_insurance, e.housing_fund,
        f.before_tax_salary, f.personal_income_tax, f.after_tax_salary, e.bank_card_number, e.identity_card_number,
        f.post_allowance, f.performance_appraisal_cash, f.bonus_cash, f.salary_cash, f."month",
        f.performance_appraisal_card, f.bonus_card, f.other_charge,
        row_number() over (order by e.id) as rn from salary_employee e left join salary_finance f on e.id =
        f.employee_id and f."month" = #{month}
        <where>
            <if test="employeeName != null and employeeName != ''">
                <bind name="pattern" value="'%' + employeeName + '%'"/>
                e.name like #{pattern}
            </if>
        </where>
        ) t
        order by t.company_id
    </select>

    <insert id="saveFinance" parameterType="FinanceDto">
        insert into "salary_finance" (created_on, employee_id, month, attendance, bonus_card, bonus_cash,
        performance_appraisal_card, performance_appraisal_cash,
        other_subsidy_card, other_subsidy_cash, exhibition_charge, charge, charge_comments, other_charge, casual_leave,
        sick_leave, storage, gross_pay, medical_insurance, housing_fund, before_tax_salary, personal_income_tax,
        after_tax_salary, already_charge, salary_cash, contract_wages, post_allowance, commission)
        values (current_timestamp, #{employeeId}, #{month}, #{attendance}, #{bonusCard}, #{bonusCash},
        #{performanceAppraisalCard}, #{performanceAppraisalCash},
        #{otherSubsidyCard}, #{otherSubsidyCash}, #{exhibitionCharge}, #{charge}, #{chargeComments}, #{otherCharge},
        #{casualLeave}, #{sickLeave}, #{storage}, #{grossPay}, #{medicalInsurance}, #{housingFund}, #{beforeTaxSalary},
        #{personalIncomeTax}, #{afterTaxSalary}, 1, #{salaryCash}, #{contractWages}, #{postAllowance}, #{bonusCash})
    </insert>

    <update id="updateFinance" parameterType="FinanceDto">
        update salary_finance
        set attendance = #{attendance},
        bonus_card = #{bonusCard},
        bonus_cash = #{bonusCash},
        performance_appraisal_card = #{performanceAppraisalCard},
        performance_appraisal_cash = #{performanceAppraisalCash},
        other_subsidy_card = #{otherSubsidyCard},
        other_subsidy_cash = #{otherSubsidyCash},
        exhibition_charge = #{exhibitionCharge},
        charge = #{charge},
        charge_comments = #{chargeComments},
        other_charge = #{otherCharge},
        casual_leave = #{casualLeave},
        sick_leave = #{sickLeave},
        storage = #{storage},
        gross_pay = #{grossPay},
        medical_insurance = #{medicalInsurance},
        housing_fund = #{housingFund},
        before_tax_salary = #{beforeTaxSalary},
        personal_income_tax = #{personalIncomeTax},
        after_tax_salary = #{afterTaxSalary},
        salary_cash = #{salaryCash},
        contract_wages = #{contractWages},
        post_allowance = #{postAllowance},
        commission = #{commission},
        is_changed =  #{isChanged}
        where id = #{id}
    </update>

    <update id="synchronizeDesignerAssistantCommission" parameterType="string">
        update f
        set f.bonus_card = sum_total,
            f.commission = sum_total,
            f.is_changed = 0
        from salary_finance f,
        (select distinct design_assistant_id, e.name, sum(designer_assistant_commission)sum_total
        from salary_project_commission p
        join salary_employee e
        on p.designer_assistant = e.name
        where month(designer_assistant_commission_date)= SUBSTRING(#{0}, 5, 5)
        group by design_assistant_id, e.name) da
        where  (f.employee_id = da.design_assistant_id
        and f.month=#{0})
    </update>

    <select id="getFinance" parameterType="FinanceDto" resultMap="FinanceMap">
        select * from salary_finance
        <where>
            1 = 1
            <if test="employeeId != null and employeeId != ''">
                and employee_id = #{employeeId}
            </if>

            <if test="month != null and month != ''">
                and month = #{month}
            </if>
        </where>

    </select>

    <update id="updateCommission" parameterType="FinanceDto">
        update salary_finance
        set bonus_card = bonus_card + #{bonusCard}
        <where>
            1 = 1
            <if test="employeeId != null and employeeId != ''">
                and employee_id = #{employeeId}
            </if>

            <if test="month != null and month != ''">
                and month like #{month}
            </if>
        </where>
    </update>

</mapper>